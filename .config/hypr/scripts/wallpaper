#!/usr/bin/env bash

SAVE_DIR="$HOME/Pictures/Wallpapers"
mkdir -p "$SAVE_DIR"
FILENAME="$SAVE_DIR/wallpaper_current.jpg"

notify_fetching() {
    local TYPE="$1"
    local ICON_PATH="$HOME/.config/hypr/scripts/icons/wallpaper.png"
    notify-send -u low -t 2000 -i "$ICON_PATH" "Wallpaper" "Please wait, fetching a $TYPE wallpaper..."
}

clean_wallpaper_folder() {
    find "$SAVE_DIR" -type f -name "wallpaper_current.jpg" -delete
}

set_wallpaper() {
    echo "Setting wallpaper with matugen and Papirus color script..."
    matugen image "$1" && ~/.config/hypr/scripts/papirus-icons-color
}

fetch_wallhaven_by_tag() {
    local TAG="$1"
    notify_fetching "$TAG"
    echo "Fetching '$TAG' wallpaper from Wallhaven..."

    API_URL="https://wallhaven.cc/api/v1/search?purity=100&q=$TAG&resolutions=1920x1080&ratios=16x9&sorting=random"
    JSON=$(curl -s "$API_URL")
    COUNT=$(echo "$JSON" | jq '.data | length')

    if [[ "$COUNT" -eq 0 ]]; then
        echo "No wallpapers found for '$TAG'."
        exit 1
    fi

    URL=$(echo "$JSON" | jq -r '.data[0].path')
    if [[ -z "$URL" ]]; then
        echo "Failed to extract image URL."
        exit 1
    fi

    clean_wallpaper_folder
    curl -s "$URL" -o "$FILENAME" || { echo "Failed to download image."; exit 1; }

    set_wallpaper "$FILENAME"
}

fetch_konachan_anime_girls() {
    notify_fetching "Anime"
    echo "Fetching random safe 1920x1080 Girls' Frontline wallpaper from Konachan..."

    for i in {1..10}; do
        PAGE=$(shuf -i 1-50 -n 1)
        JSON=$(curl -s "https://konachan.com/post.json?limit=100&page=$PAGE&tags=rating:safe+girls_frontline")

        FILTERED=$(echo "$JSON" | jq '[.[] | select(.width == 1920 and .height == 1080)]')
        COUNT=$(echo "$FILTERED" | jq length)

        echo "Page $PAGE has $COUNT images with 1920x1080 and tag girls_frontline."

        if [[ "$COUNT" -gt 0 ]]; then
            INDEX=$((RANDOM % COUNT))
            IMG_URL=$(echo "$FILTERED" | jq -r ".[$INDEX].jpeg_url")

            if [[ -n "$IMG_URL" ]]; then
                clean_wallpaper_folder
                curl -s "$IMG_URL" -o "$FILENAME" || { echo "Failed to download image."; exit 1; }
                set_wallpaper "$FILENAME"
                return
            fi
        fi
    done

    echo "No suitable 1920x1080 Girls' Frontline wallpapers found after multiple tries."
    exit 1
}

fetch_yandere_anime_wallpapers() {
    notify_fetching "Anime 2"
    echo "Fetching random safe 1920x1080 anime wallpapers tagged 'wallpaper' from yande.re..."

    for i in {1..10}; do
        PAGE=$(shuf -i 1-50 -n 1)
        JSON=$(curl -s "https://yande.re/post.json?limit=100&page=$PAGE&tags=rating:safe+wallpaper")

        FILTERED=$(echo "$JSON" | jq '[.[] | select(.width == 1920 and .height == 1080)]')
        COUNT=$(echo "$FILTERED" | jq length)

        echo "Page $PAGE has $COUNT images with 1920x1080 and tag wallpaper."

        if [[ "$COUNT" -gt 0 ]]; then
            INDEX=$((RANDOM % COUNT))
            IMG_URL=$(echo "$FILTERED" | jq -r ".[$INDEX].jpeg_url")

            if [[ -n "$IMG_URL" ]]; then
                clean_wallpaper_folder
                curl -s "$IMG_URL" -o "$FILENAME" || { echo "Failed to download image."; exit 1; }
                set_wallpaper "$FILENAME"
                return
            fi
        fi
    done

    echo "No suitable 1920x1080 anime wallpapers found on yande.re after multiple tries."
    exit 1
}

# Rofi menu or argument handling
if [[ -z "$1" ]]; then
    CHOICE=$(printf "Normal\nAnime\nAnime 2\nNature\nFlowers\nDigital Art\nCar\nApocalyptic\nPlateau\nArtwork\nMountains\n" | rofi -theme ~/.config/rofi/material-theme.rasi -dmenu -i -p "Choose wallpaper type:")
    case "$CHOICE" in
        Normal) fetch_wallhaven_by_tag "landscape" ;;
        Anime) fetch_konachan_anime_girls ;;
        "Anime 2") fetch_yandere_anime_wallpapers ;;
        Nature) fetch_wallhaven_by_tag "nature" ;;
        Flowers) fetch_wallhaven_by_tag "flowers" ;;
        "Digital Art") fetch_wallhaven_by_tag "digital+art" ;;
        Car) fetch_wallhaven_by_tag "car" ;;
        Apocalyptic) fetch_wallhaven_by_tag "apocalyptic" ;;
        Plateau) fetch_wallhaven_by_tag "plateau" ;;
        Artwork) fetch_wallhaven_by_tag "artwork" ;;
        Mountains) fetch_wallhaven_by_tag "mountains" ;;
        *) echo "No valid selection made."; exit 1 ;;
    esac
else
    case "$1" in
        --normal) fetch_wallhaven_by_tag "landscape" ;;
        --anime) fetch_konachan_anime_girls ;;
        --anime2) fetch_yandere_anime_wallpapers ;;
        --nature) fetch_wallhaven_by_tag "nature" ;;
        --flowers) fetch_wallhaven_by_tag "flowers" ;;
        --digital) fetch_wallhaven_by_tag "digital+art" ;;
        --car) fetch_wallhaven_by_tag "car" ;;
        --apocalyptic) fetch_wallhaven_by_tag "apocalyptic" ;;
        --plateau) fetch_wallhaven_by_tag "plateau" ;;
        --artwork) fetch_wallhaven_by_tag "artwork" ;;
        --mountains) fetch_wallhaven_by_tag "mountains" ;;
        *) echo "Usage: $0 [--normal|--anime|--anime2|--nature|--flowers|--digital|--car|--apocalyptic|--plateau|--artwork|--mountains]"; exit 1 ;;
    esac
fi
